version: 2.1
orbs:
  python: circleci/python@1.5.0
jobs:
  add_ssh_key:
    docker:
      - image: cimg/python:3.11
    steps:
      - add_ssh_keys:
          fingerprints:
            - "11:b4:92:0f:38:89:4f:2c:13:c6:eb:1e:52:2d:33:07"

  lint:
    docker:
      - image: cimg/python:3.11-node
    steps:
      - checkout
      - run: make -k lint

  test:
    docker:
      - image: cimg/python:3.11
        environment:
          DJANGO_SETTINGS_MODULE: consvc_shepherd.settings
      - image: cimg/postgres:14.2
        environment:
          POSTGRES_HOST_AUTH_METHOD: trust
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run: make test

  build:
    docker:
      - image: cimg/base:2022.08
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Login to Dockerhub
          command: |
            if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
              echo "Skipping Login to Dockerhub, credentials not available."
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi
      - run:
          name: Create a version.json
          command: |
            # create a version.json per
            # https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json

      - run:
          name: Build Docker image
          command: docker build -t app:build .
      - run:
          name: docker save app:build
          command: |
            mkdir -p /tmp/workspace
            docker save -o /tmp/workspace/docker.tar app:build
            gzip /tmp/workspace/docker.tar
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - docker.tar.gz
  deploy:
    docker:
      - image: cimg/base:2022.08
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: workspace
      - run:
          name: Restore Docker image cache
          command: docker load -i workspace/docker.tar.gz
      - run:
          name: Deploy to Dockerhub
          command: |
            DOCKER_TAG="${CIRCLE_SHA1}"
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            echo ${DOCKERHUB_REPO}:${DOCKER_TAG}
            docker tag app:build ${DOCKERHUB_REPO}:${DOCKER_TAG}
            docker images
            docker push "${DOCKERHUB_REPO}:${DOCKER_TAG}"
  docs-build:
    docker:
      - image: cimg/base:2022.08
    steps:
      - checkout
      - run:
          name: Setup Build docs
          command: |
            echo 'export PATH=$(pwd)/bin:"$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
            curl -sSL \
              https://github.com/rust-lang/mdBook/releases/download/v0.4.24/mdbook-v0.4.24-x86_64-unknown-linux-gnu.tar.gz \
              | tar -xz --directory=bin
            curl -sSL \
              https://github.com/badboy/mdbook-mermaid/releases/download/v0.12.6/mdbook-mermaid-v0.12.6-x86_64-unknown-linux-gnu.tar.gz \
              | tar -xz --directory=bin
      - run:
          name: Build docs
          command: |
            make doc
            mkdir workspace
            cp -r ./book workspace/doc
      - persist_to_workspace:
          root: workspace
          paths:
            - doc
  docs-github-pages:
    docker:
      - image: cimg/node:16.18.1
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "a9:30:e8:46:6a:6d:37:b4:e0:a6:2a:dd:8e:67:dc:ee"
      - attach_workspace:
          at: workspace
      - run:
          name: Disable jekyll builds
          command: touch workspace/doc/.nojekyll
      - run:
          name: Set remote origin if needed
          command: |
            git remote add origin git@github.com:mozilla-services/consvc-shepherd.git || true
      - run:
          name: Deploy docs to gh-pages
          command: |
            npx --yes gh-pages@3.0.0 \
              --user "ci-build <ci-build@merino.mozilla.org>" \
              --message "[skip ci] Docs updates" \
              --repo "git@github.com:mozilla-services/consvc-shepherd.git" \
              --dist workspace/doc

workflows:
  shepherd:
    jobs:
      - lint
      - test
      - docs-build
      - build:
          requires:
            - lint
            - test
      - deploy:
          requires:
            - build
            - lint
            - test
          filters:
            branches:
              only: main
      - docs-github-pages:
          requires:
            - docs-build
          filters:
            branches:
              only: main
