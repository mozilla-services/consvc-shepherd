version: 2.1
orbs:
  python: circleci/python@1.5.0
jobs:
  test:
    docker:
      - image: cimg/python:3.11
        environment:
          DJANGO_SETTINGS_MODULE: consvc_shepherd.settings
      - image: cimg/postgres:14.2
        environment:
         POSTGRES_HOST_AUTH_METHOD: trust
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: poetry install --no-interaction --no-root
      - run:
          name: Run tests
          command: poetry run pytest --cov --cov-report=term-missing --cov-fail-under=95
      - run:
          name: Check Migrations
          command: poetry run python manage.py makemigrations --check --dry-run --noinput
      - run:
          name: Flake8 Lint
          command: poetry run flake8 .
      - run:
          name: Black Lint
          command: poetry run black . --check --diff
      - run:
          name: Imports Sort
          command: poetry run isort . --profile black --check
      - run:
          name: Bandit Check
          command: poetry run bandit .
  build:
    docker:
      - image: cimg/base:2022.08
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Login to Dockerhub
          command: |
            if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
              echo "Skipping Login to Dockerhub, credentials not available."
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi
      - run:
          name: Create a version.json
          command: |
            # create a version.json per
            # https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json

      - run:
          name: Build Docker image
          command: docker build -t app:build .
      - run:
          name: docker save app:build
          command: |
            mkdir -p /tmp/workspace
            docker save -o /tmp/workspace/docker.tar app:build
            gzip /tmp/workspace/docker.tar
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - docker.tar.gz
  deploy:
    docker:
      - image: cimg/base:2022.08
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: workspace
      - run:
          name: Restore Docker image cache
          command: docker load -i workspace/docker.tar.gz
      - run:
          name: Deploy to Dockerhub
          command: |
            DOCKER_TAG="${CIRCLE_SHA1}"
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            echo ${DOCKERHUB_REPO}:${DOCKER_TAG}
            docker tag app:build ${DOCKERHUB_REPO}:${DOCKER_TAG}
            docker images
            docker push "${DOCKERHUB_REPO}:${DOCKER_TAG}"


workflows:
  shepherd:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only: main
