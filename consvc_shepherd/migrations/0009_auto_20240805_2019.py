# Generated by Django 4.2.14 on 2024-08-05 20:19

from django.db import migrations
#Placeholder value are being used for revenue and budget
#TODO update this query once we have all the data imported or remove the columns
CREATE_SQL = """
CREATE OR REPLACE VIEW revenue_overview AS
SELECT
row_number() OVER () as id,
full_name AS placement,
sum(amount) AS revenue,
sum(amount) AS budget,
sum(amount) - SUM(budget) AS revenue_delta,
consvc_shepherd_boostrdealproduct.month
FROM
consvc_shepherd_boostrdealproduct
LEFT JOIN consvc_shepherd_boostrproduct ON consvc_shepherd_boostrdealproduct.boostr_product_id =
 consvc_shepherd_boostrproduct.id
LEFT JOIN consvc_shepherd_boostrdeal ON consvc_shepherd_boostrdealproduct.boostr_deal_id =
 consvc_shepherd_boostrdeal.id
GROUP BY
full_name,
consvc_shepherd_boostrdealproduct.month
ORDER BY
MONTH ASC,
full_name ASC
"""

DROP_SQL = "DROP VIEW IF EXISTS revenue_overview;"


def create_countries(apps, schema_editor):
    Country = apps.get_model("consvc_shepherd", "Country")
    db_alias = schema_editor.connection.alias
    Country.objects.using(db_alias).bulk_create(
        [
            Country(code="US", name="United States"),
            Country(code="CA", name="Canada"),
            Country(code="DE", name="Germany"),
            Country(code="ES", name="Spain"),
            Country(code="FR", name="France"),
            Country(code="GB", name="United Kingdom"),
            Country(code="IT", name="Italy"),
            Country(code="PL", name="Poland"),
            Country(code="AT", name="Austria"),
            Country(code="NL", name="Netherlands"),
            Country(code="LU", name="Luxembourg"),
            Country(code="CH", name="Switzerland"),
            Country(code="BE", name="Belgium"),
        ],
        ignore_conflicts=True,
    )


def remove_countries(apps, schema_editor):
    Country = apps.get_model("consvc_shepherd", "Country")
    db_alias = schema_editor.connection.alias

    Country.objects.using(db_alias).filter(
        code__in=[
            "US",
            "CA",
            "DE",
            "ES",
            "FR",
            "GB",
            "IT",
            "PL",
            "AT",
            "NL",
            "LU",
            "CH",
            "BE",
        ]
    ).delete()


def create_ad_products(apps, schema_editor):
    AdProduct = apps.get_model("consvc_shepherd", "AdProduct")
    db_alias = schema_editor.connection.alias
    AdProduct.objects.using(db_alias).bulk_create(
        [
            AdProduct(name="Firefox New Tab Desktop"),
            AdProduct(name="Pocket Hits"),
            AdProduct(name="Pocket Syndication"),
            AdProduct(name="MDN (Direct Only)"),
            AdProduct(name="Firefox New Tab Mobile"),
            AdProduct(name="Firefox Tiles (Direct Only)"),
        ],
        ignore_conflicts=True,
    )


def remove_ad_products(apps, schema_editor):
    AdProduct = apps.get_model("consvc_shepherd", "AdProduct")
    db_alias = schema_editor.connection.alias
    ad_products_to_delete = [
        "Firefox New Tab Desktop",
        "Pocket Hits",
        "Pocket Syndication",
        "MDN (Direct Only)",
        "Firefox New Tab Mobile",
        "Firefox New Tab Mobile",
        "Firefox Tiles (Direct Only)",
    ]
    AdProduct.objects.using(db_alias).filter(name__in=ad_products_to_delete).delete()


class Migration(migrations.Migration):
    dependencies = [
        (
            "consvc_shepherd",
            "0008_revenueoverview_adopscampaignmanager_adproduct_and_more",
        ),
    ]

    operations = [
        migrations.RunSQL(
            sql=CREATE_SQL,
            reverse_sql=DROP_SQL,
        ),
        migrations.RunPython(
            create_countries,
            remove_countries,
        ),
        migrations.RunPython(
            create_ad_products,
            remove_ad_products,
        ),
    ]
